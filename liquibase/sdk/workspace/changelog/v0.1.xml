<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">
    <changeSet id="201507140851" author="vmakarenko">
        <comment>
            Init 1
        </comment>
        <sql>
            CREATE TABLE Users (
            id uuid,
            name TEXT,
            surname TEXT,
            patronymic TEXT,
            passport_series TEXT,
            passport_number TEXT,

            email TEXT,
            password_hash TEXT,
            working_place_id uuid,
            date_of_birth DATE,
            CONSTRAINT Users_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Events (
            id uuid,
            create_date DATE,
            name TEXT,
            event_type TEXT,
            start_date DATE,
            end_date DATE,
            application_start_date DATE,
            application_end_date DATE,
            payment_start_date DATE,
            payment_end_date DATE,
            program_ready_date DATE,
            results_ready_date DATE,
            CONSTRAINT Events_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports (
            id uuid,
            reporter_id uuid,
            creator_id uuid,
            report_name TEXT,
            event_id uuid,
            file_id uuid,
            status_id uuid,
            CONSTRAINT Reports_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Coauthors (
            id uuid,
            report_id uuid,
            user_id uuid,
            CONSTRAINT Coauthors_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE External_authors (
            id uuid,
            surname TEXT,
            created_by_id uuid,
            name TEXT,
            patronymic TEXT,
            working_place TEXT,
            position TEXT,
            report_id uuid,
            CONSTRAINT External_authors_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Inner_Messages (
            id uuid,
            text TEXT,
            sender_id uuid,
            receiver_id uuid,
            time DATE,
            CONSTRAINT Inner_Messages_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Inner_message_attaches (
            id uuid,
            file_id uuid,
            message_id uuid,
            CONSTRAINT Inner_message_attaches_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE External_Messages (
            id uuid,
            topic TEXT,
            text TEXT,
            from_email TEXT,
            create_time DATE,
            send_time DATE,
            sent_status BOOLEAN,
            CONSTRAINT External_Messages_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Files (
            id uuid,
            file_name TEXT,
            display_name TEXT,
            type TEXT,
            content bytea,
            path TEXT,
            CONSTRAINT Files_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE External_Message_Receivers (
            id uuid,
            message_id uuid,
            user_id uuid,
            create_time DATE,
            is_read BOOLEAN,
            CONSTRAINT External_Message_Receivers_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE User_def_events (
            id uuid,
            name TEXT,
            is_broadcast BOOLEAN,
            description TEXT,
            template_id uuid,
            CONSTRAINT User_def_events_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Events_Conn_User_def_Events (
            id uuid,
            event_id uuid,
            user_def_event_id uuid,
            date_from DATE,
            date_to DATE,
            CONSTRAINT Events_Conn_User_def_Events_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Working_places (
            id uuid,
            full_name TEXT,
            short_name TEXT,
            phys_address TEXT,
            juridical_address TEXT,
            approved BOOLEAN,
            CONSTRAINT Working_places_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Users_Events(
            id uuid,
            events_id uuid,
            users_id uuid,
            CONSTRAINT Users_Events_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Event_Document (
            id uuid,
            name TEXT,
            event_id uuid,
            file_id uuid,
            CONSTRAINT Event_Document_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE External_message_attaches (
            id uuid,
            file_id uuid,
            message_id uuid,
            CONSTRAINT External_message_attaches_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Sections (
            id uuid,
            name TEXT,
            create_time DATE,
            CONSTRAINT Sections_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Available_sections (
            id uuid,
            section_id uuid,
            event_id uuid,
            CONSTRAINT Available_sections_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports_Sections (
            id uuid,
            is_approved BOOLEAN,
            report_id uuid,
            section_id uuid,
            CONSTRAINT Reports_Sections_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports_Users (
            id uuid,
            report_id uuid,
            user_id uuid,
            status uuid,
            CONSTRAINT Reports_Users_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE User_Log (
            id uuid,
            time DATE,
            user_id uuid,
            msg TEXT,
            log_type TEXT,
            CONSTRAINT User_Log_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports_Future_Users (
            id uuid,
            report_id uuid,
            email TEXT,
            CONSTRAINT Reports_Future_Users_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports_Statuses (
            id uuid,
            name TEXT,
            display_name TEXT,
            CONSTRAINT Reports_Statuses_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Broadcast_templates (
            id uuid,
            name TEXT,
            topic TEXT,
            text TEXT,
            CONSTRAINT Broadcast_templates_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            ALTER TABLE Users ADD CONSTRAINT Users_fk0 FOREIGN KEY (working_place_id) REFERENCES Working_places(id);


            ALTER TABLE Reports ADD CONSTRAINT Reports_fk0 FOREIGN KEY (reporter_id) REFERENCES Users(id);
            ALTER TABLE Reports ADD CONSTRAINT Reports_fk1 FOREIGN KEY (creator_id) REFERENCES Users(id);
            ALTER TABLE Reports ADD CONSTRAINT Reports_fk2 FOREIGN KEY (event_id) REFERENCES Events(id);
            ALTER TABLE Reports ADD CONSTRAINT Reports_fk3 FOREIGN KEY (file_id) REFERENCES Files(id);
            ALTER TABLE Reports ADD CONSTRAINT Reports_fk4 FOREIGN KEY (status_id) REFERENCES Reports_Statuses(id);

            ALTER TABLE Coauthors ADD CONSTRAINT Coauthors_fk0 FOREIGN KEY (report_id) REFERENCES Reports(id);
            ALTER TABLE Coauthors ADD CONSTRAINT Coauthors_fk1 FOREIGN KEY (user_id) REFERENCES Users(id);

            ALTER TABLE External_authors ADD CONSTRAINT External_authors_fk0 FOREIGN KEY (created_by_id) REFERENCES
            Users(id);


            ALTER TABLE Inner_Messages ADD CONSTRAINT Inner_Messages_fk0 FOREIGN KEY (sender_id) REFERENCES Users(id);
            ALTER TABLE Inner_Messages ADD CONSTRAINT Inner_Messages_fk1 FOREIGN KEY (receiver_id) REFERENCES Users(id);

            ALTER TABLE Inner_message_attaches ADD CONSTRAINT Inner_message_attaches_fk0 FOREIGN KEY (file_id)
            REFERENCES Files(id);
            ALTER TABLE Inner_message_attaches ADD CONSTRAINT Inner_message_attaches_fk1 FOREIGN KEY (message_id)
            REFERENCES Inner_Messages(id);


            ALTER TABLE External_Message_Receivers ADD CONSTRAINT External_Message_Receivers_fk0 FOREIGN KEY
            (message_id) REFERENCES External_Messages(id);
            ALTER TABLE External_Message_Receivers ADD CONSTRAINT External_Message_Receivers_fk1 FOREIGN KEY (user_id)
            REFERENCES Users(id);

            ALTER TABLE User_def_events ADD CONSTRAINT User_def_events_fk0 FOREIGN KEY (template_id) REFERENCES
            Broadcast_templates(id);

            ALTER TABLE Events_Conn_User_def_Events ADD CONSTRAINT Events_Conn_User_def_Events_fk0 FOREIGN KEY
            (event_id) REFERENCES Events(id);
            ALTER TABLE Events_Conn_User_def_Events ADD CONSTRAINT Events_Conn_User_def_Events_fk1 FOREIGN KEY
            (user_def_event_id) REFERENCES User_def_events(id);


            ALTER TABLE Users_Events ADD CONSTRAINT Users_Events_fk0 FOREIGN KEY (events_id) REFERENCES Events(id);
            ALTER TABLE Users_Events ADD CONSTRAINT Users_Events_fk1 FOREIGN KEY (users_id) REFERENCES Users(id);

            ALTER TABLE Event_Document ADD CONSTRAINT Event_Document_fk0 FOREIGN KEY (event_id) REFERENCES Events(id);
            ALTER TABLE Event_Document ADD CONSTRAINT Event_Document_fk1 FOREIGN KEY (file_id) REFERENCES Files(id);

            ALTER TABLE External_message_attaches ADD CONSTRAINT External_message_attaches_fk0 FOREIGN KEY (file_id)
            REFERENCES Files(id);
            ALTER TABLE External_message_attaches ADD CONSTRAINT External_message_attaches_fk1 FOREIGN KEY (message_id)
            REFERENCES External_Messages(id);


            ALTER TABLE Available_sections ADD CONSTRAINT Available_sections_fk0 FOREIGN KEY (section_id) REFERENCES
            Sections(id);
            ALTER TABLE Available_sections ADD CONSTRAINT Available_sections_fk1 FOREIGN KEY (event_id) REFERENCES
            Events(id);

            ALTER TABLE Reports_Sections ADD CONSTRAINT Reports_Sections_fk0 FOREIGN KEY (report_id) REFERENCES
            Reports(id);
            ALTER TABLE Reports_Sections ADD CONSTRAINT Reports_Sections_fk1 FOREIGN KEY (section_id) REFERENCES
            Available_sections(id);

            ALTER TABLE Reports_Users ADD CONSTRAINT Reports_Users_fk0 FOREIGN KEY (report_id) REFERENCES Reports(id);
            ALTER TABLE Reports_Users ADD CONSTRAINT Reports_Users_fk1 FOREIGN KEY (user_id) REFERENCES Users(id);
            ALTER TABLE Reports_Users ADD CONSTRAINT Reports_Users_fk2 FOREIGN KEY (status) REFERENCES
            Reports_Statuses(id);

            ALTER TABLE User_Log ADD CONSTRAINT User_Log_fk0 FOREIGN KEY (user_id) REFERENCES Users(id);

            ALTER TABLE Reports_Future_Users ADD CONSTRAINT Reports_Future_Users_fk0 FOREIGN KEY (report_id) REFERENCES
            Reports(id);


        </sql>
    </changeSet>
    <changeSet id="201507190851" author="vmakarenko">
        <comment>
            Init 1
        </comment>
        <sql>
            alter table users add column user_type text;
        </sql>
    </changeSet>

    <changeSet id="201507190852" author="vmakarenko">
        <comment>
            ADd test user
        </comment>
        <sql>
            INSERT INTO USERS ( id, name, surname, passport_series,
            passport_number, password_hash, email, user_type) VALUES
            ('00000000-0000-0000-0000-000000000002', 'Администратор', 'Администратор', '0000', '000000',
            'admin', 'admin@test.ru', 'member');
        </sql>
    </changeSet>
    <changeSet id="201509200850" author="vmakarenko">
        <comment>
           fix member case
        </comment>
        <sql>
            UPDATE USERS set USER_TYPE = 'MEMBER' where USER_TYPE ='member';
        </sql>
    </changeSet>
    <changeSet id="201510081135" author="vmakarenko">
        <comment>
            Add app settings and settings for email
        </comment>
        <sql>
            CREATE TABLE APP_SETTINGS (
            id uuid PRIMARY KEY,
            name TEXT,
            value TEXT
            );

            INSERT INTO APP_SETTINGS (id, name, value) VALUES ('ef1b43f1-918c-4728-8175-aa263f3b6fc6', 'mail.my.host',
            '127.0.0.1');
            INSERT INTO APP_SETTINGS (id, name, value) VALUES ('ef1b43f1-918c-4728-8175-aa263f3b6fc7', 'mail.my.port',
            '5432');
            INSERT INTO APP_SETTINGS (id, name, value) VALUES ('ef1b43f1-918c-4728-8175-aa263f3b6fc8',
            'mail.my.username', 'conf.mai');
            INSERT INTO APP_SETTINGS (id, name, value) VALUES ('ef1b43f1-918c-4728-8175-aa263f3b6fc9',
            'mail.my.password', '2z4ds11od');
            INSERT INTO APP_SETTINGS (id, name, value) VALUES ('ef1b43f1-918c-4728-8175-aa263f3b6fd0', 'mail.my.email',
            'conf.mai@yandex.ru');
        </sql>
    </changeSet>
    <changeSet id="201510121041" author="vmakarenko">
        <comment>
            Add universities
        </comment>
        <sql>
            CREATE TABLE universities (
            id uuid PRIMARY KEY,
            long_name TEXT,
            short_name TEXT
            );
        </sql>
    </changeSet>
    <changeSet id="201510122317" author="vmakarenko">
        <comment>
            fix ext.msg
        </comment>
        <sql>
            ALTER TABLE external_message_receivers DROP CONSTRAINT external_message_receivers_pk;
            ALTER TABLE external_message_receivers ADD PRIMARY KEY (message_id, user_id);
            ALTER TABLE external_message_receivers DROP COLUMN id;
        </sql>
    </changeSet>
    <changeSet id="201510122325" author="vmakarenko">
        <comment>
            update mail settings
        </comment>
        <sql>
            UPDATE APP_SETTINGS set value='smtp.yandex.ru' where name='mail.my.host';
            UPDATE APP_SETTINGS set value='465' where name='mail.my.port';

        </sql>
    </changeSet>
    <changeSet id="201510122326" author="vmakarenko">
        <comment>
            update mail settings
        </comment>
        <sql>
            UPDATE APP_SETTINGS set value='conf.mai@yandex.ru' where name='mail.my.username';
        </sql>
    </changeSet>
    <changeSet id="201510122345" author="vmakarenko">
        <comment>
            update mail settings
        </comment>
        <sql>
            UPDATE APP_SETTINGS set value='7y80A5sQ' where name='mail.my.password';
        </sql>
    </changeSet>
    <changeSet id="201510131008" author="vmakarenko">
        <comment>
            set email unique
        </comment>
        <sql>
            alter table users add UNIQUE (email);
        </sql>
    </changeSet>
    <changeSet id="201510131159" author="vmakarenko">
        <comment>
            add admin user
        </comment>
        <sql>
            INSERT into USERS (id, surname, name, email, password_hash, user_type)
            VALUES ('47f02df6-93e3-493b-b72f-2c4e6206359d','Северина','Наталья','admin@admin.ru','adm12','ADMIN');
        </sql>
    </changeSet>

    <changeSet id="2015101251237" author="vmakarenko">
        <comment>
            update mail settings
        </comment>
        <sql>
            UPDATE APP_SETTINGS set value='587' where name='mail.my.port';
        </sql>
    </changeSet>
    <changeSet id="2015101251655" author="vmakarenko">
        <comment>
            add datas for event
        </comment>
        <sql>
            ALTER TABLE events
            ADD info_rec_end_date date,
            ADD print_end_date date;
        </sql>
    </changeSet>
    <changeSet id="201510260054" author="vmakarenko">
        <comment>
            change users_events
        </comment>
        <sql>
            alter table users_events drop constraint users_events_pk;
            alter table users_events drop column id;
            alter table users_events add primary key (users_id, events_id);
        </sql>
    </changeSet>
    <changeSet id="20151113943" author="vmakarenko">
        <comment>
            add simple string values for stuff and organisations for events. also add sections.
        </comment>
        <sql>
            create table s_string_values(
            id uuid primary key,
            value text
            );

            create table events_tech_people(
            event_id uuid REFERENCES events(id),
            people_id uuid REFERENCES s_string_values(id)
            );

            create table events_org_orgs(
            event_id uuid REFERENCES events(id),
            org_id uuid REFERENCES universities(id)
            );

            create table events_sections(
            event_id uuid REFERENCES events(id),
            section_id uuid REFERENCES sections(id)
            );

        </sql>
    </changeSet>
    <changeSet id="20151111428" author="vmakarenko">
        <comment>
            add short name for event
        </comment>
        <sql>
            alter table events add short_name text;
        </sql>
    </changeSet>
    <changeSet id="201511171647" author="vmakarenko">
        <comment>
            add country and city for universities
        </comment>
        <sql>
            alter table universities add city text;
            alter table universities add country text;
        </sql>
    </changeSet>
    <changeSet id="201511171649" author="vmakarenko">
        <comment>
            add columns for sections
        </comment>
        <sql>
            alter table sections add letter text;
            alter table universities add event_id UUID references events(id);
        </sql>
    </changeSet>
    <changeSet id="201511171650" author="vmakarenko">
        <comment>
            fix columns for sections
        </comment>
        <sql>
            alter table universities drop column  event_id;
            alter table sections add event_id UUID references events(id);
        </sql>
    </changeSet>
    <changeSet id="201511182105" author="vmakarenko">
        <comment>
            add coauthors for entries
        </comment>
        <sql>
            drop table coauthors;
            create table thesises (
            id uuid primary key,
            name text,
            section_id uuid references sections(id),
            user_id uuid references users(id),
            event_id uuid references events(id)
            );

            create table coauthors (
            id uuid primary key,
            name text,
            surname text,
            patronymic text,
            user_id uuid references users(id),
            email text,
            thesis_id uuid references thesises(id),
            confirmed boolean
            );


        </sql>
    </changeSet>
    <changeSet id="201511201540" author="vmakarenko">
        <comment>
            add dtype
        </comment>
        <sql>
            alter table coauthors add column dtype varchar(3);
        </sql>
    </changeSet>

</databaseChangeLog>