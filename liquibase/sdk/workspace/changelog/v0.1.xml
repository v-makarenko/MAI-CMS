<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">
    <changeSet id="201507140851" author="vmakarenko">
        <comment>
            Init 1
        </comment>
        <sql>
            CREATE TABLE Users (
            id uuid,
            name TEXT,
            surname TEXT,
            patronymic TEXT,
            passport_series TEXT,
            passport_number TEXT,

            email TEXT,
            password_hash TEXT,
            working_place_id uuid,
            date_of_birth DATE,
            CONSTRAINT Users_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Events (
            id uuid,
            create_date DATE,
            name TEXT,
            event_type TEXT,
            start_date DATE,
            end_date DATE,
            application_start_date DATE,
            application_end_date DATE,
            payment_start_date DATE,
            payment_end_date DATE,
            program_ready_date DATE,
            results_ready_date DATE,
            CONSTRAINT Events_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports (
            id uuid,
            reporter_id uuid,
            creator_id uuid,
            report_name TEXT,
            event_id uuid,
            file_id uuid,
            status_id uuid,
            CONSTRAINT Reports_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Coauthors (
            id uuid,
            report_id uuid,
            user_id uuid,
            CONSTRAINT Coauthors_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE External_authors (
            id uuid,
            surname TEXT,
            created_by_id uuid,
            name TEXT,
            patronymic TEXT,
            working_place TEXT,
            position TEXT,
            report_id uuid,
            CONSTRAINT External_authors_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Inner_Messages (
            id uuid,
            text TEXT,
            sender_id uuid,
            receiver_id uuid,
            time DATE,
            CONSTRAINT Inner_Messages_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Inner_message_attaches (
            id uuid,
            file_id uuid,
            message_id uuid,
            CONSTRAINT Inner_message_attaches_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE External_Messages (
            id uuid,
            topic TEXT,
            text TEXT,
            from_email TEXT,
            create_time DATE,
            send_time DATE,
            sent_status BOOLEAN,
            CONSTRAINT External_Messages_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Files (
            id uuid,
            file_name TEXT,
            display_name TEXT,
            type TEXT,
            content bytea,
            path TEXT,
            CONSTRAINT Files_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE External_Message_Receivers (
            id uuid,
            message_id uuid,
            user_id uuid,
            create_time DATE,
            is_read BOOLEAN,
            CONSTRAINT External_Message_Receivers_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE User_def_events (
            id uuid,
            name TEXT,
            is_broadcast BOOLEAN,
            description TEXT,
            template_id uuid,
            CONSTRAINT User_def_events_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Events_Conn_User_def_Events (
            id uuid,
            event_id uuid,
            user_def_event_id uuid,
            date_from DATE,
            date_to DATE,
            CONSTRAINT Events_Conn_User_def_Events_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Working_places (
            id uuid,
            full_name TEXT,
            short_name TEXT,
            phys_address TEXT,
            juridical_address TEXT,
            approved BOOLEAN,
            CONSTRAINT Working_places_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Users_Events(
            id uuid,
            events_id uuid,
            users_id uuid,
            CONSTRAINT Users_Events_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Event_Document (
            id uuid,
            name TEXT,
            event_id uuid,
            file_id uuid,
            CONSTRAINT Event_Document_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE External_message_attaches (
            id uuid,
            file_id uuid,
            message_id uuid,
            CONSTRAINT External_message_attaches_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Sections (
            id uuid,
            name TEXT,
            create_time DATE,
            CONSTRAINT Sections_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Available_sections (
            id uuid,
            section_id uuid,
            event_id uuid,
            CONSTRAINT Available_sections_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports_Sections (
            id uuid,
            is_approved BOOLEAN,
            report_id uuid,
            section_id uuid,
            CONSTRAINT Reports_Sections_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports_Users (
            id uuid,
            report_id uuid,
            user_id uuid,
            status uuid,
            CONSTRAINT Reports_Users_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE User_Log (
            id uuid,
            time DATE,
            user_id uuid,
            msg TEXT,
            log_type TEXT,
            CONSTRAINT User_Log_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports_Future_Users (
            id uuid,
            report_id uuid,
            email TEXT,
            CONSTRAINT Reports_Future_Users_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Reports_Statuses (
            id uuid,
            name TEXT,
            display_name TEXT,
            CONSTRAINT Reports_Statuses_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            CREATE TABLE Broadcast_templates (
            id uuid,
            name TEXT,
            topic TEXT,
            text TEXT,
            CONSTRAINT Broadcast_templates_pk PRIMARY KEY (id)
            ) WITH (
            OIDS=FALSE
            );


            ALTER TABLE Users ADD CONSTRAINT Users_fk0 FOREIGN KEY (working_place_id) REFERENCES Working_places(id);


            ALTER TABLE Reports ADD CONSTRAINT Reports_fk0 FOREIGN KEY (reporter_id) REFERENCES Users(id);
            ALTER TABLE Reports ADD CONSTRAINT Reports_fk1 FOREIGN KEY (creator_id) REFERENCES Users(id);
            ALTER TABLE Reports ADD CONSTRAINT Reports_fk2 FOREIGN KEY (event_id) REFERENCES Events(id);
            ALTER TABLE Reports ADD CONSTRAINT Reports_fk3 FOREIGN KEY (file_id) REFERENCES Files(id);
            ALTER TABLE Reports ADD CONSTRAINT Reports_fk4 FOREIGN KEY (status_id) REFERENCES Reports_Statuses(id);

            ALTER TABLE Coauthors ADD CONSTRAINT Coauthors_fk0 FOREIGN KEY (report_id) REFERENCES Reports(id);
            ALTER TABLE Coauthors ADD CONSTRAINT Coauthors_fk1 FOREIGN KEY (user_id) REFERENCES Users(id);

            ALTER TABLE External_authors ADD CONSTRAINT External_authors_fk0 FOREIGN KEY (created_by_id) REFERENCES
            Users(id);


            ALTER TABLE Inner_Messages ADD CONSTRAINT Inner_Messages_fk0 FOREIGN KEY (sender_id) REFERENCES Users(id);
            ALTER TABLE Inner_Messages ADD CONSTRAINT Inner_Messages_fk1 FOREIGN KEY (receiver_id) REFERENCES Users(id);

            ALTER TABLE Inner_message_attaches ADD CONSTRAINT Inner_message_attaches_fk0 FOREIGN KEY (file_id)
            REFERENCES Files(id);
            ALTER TABLE Inner_message_attaches ADD CONSTRAINT Inner_message_attaches_fk1 FOREIGN KEY (message_id)
            REFERENCES Inner_Messages(id);


            ALTER TABLE External_Message_Receivers ADD CONSTRAINT External_Message_Receivers_fk0 FOREIGN KEY
            (message_id) REFERENCES External_Messages(id);
            ALTER TABLE External_Message_Receivers ADD CONSTRAINT External_Message_Receivers_fk1 FOREIGN KEY (user_id)
            REFERENCES Users(id);

            ALTER TABLE User_def_events ADD CONSTRAINT User_def_events_fk0 FOREIGN KEY (template_id) REFERENCES
            Broadcast_templates(id);

            ALTER TABLE Events_Conn_User_def_Events ADD CONSTRAINT Events_Conn_User_def_Events_fk0 FOREIGN KEY
            (event_id) REFERENCES Events(id);
            ALTER TABLE Events_Conn_User_def_Events ADD CONSTRAINT Events_Conn_User_def_Events_fk1 FOREIGN KEY
            (user_def_event_id) REFERENCES User_def_events(id);


            ALTER TABLE Users_Events ADD CONSTRAINT Users_Events_fk0 FOREIGN KEY (events_id) REFERENCES Events(id);
            ALTER TABLE Users_Events ADD CONSTRAINT Users_Events_fk1 FOREIGN KEY (users_id) REFERENCES Users(id);

            ALTER TABLE Event_Document ADD CONSTRAINT Event_Document_fk0 FOREIGN KEY (event_id) REFERENCES Events(id);
            ALTER TABLE Event_Document ADD CONSTRAINT Event_Document_fk1 FOREIGN KEY (file_id) REFERENCES Files(id);

            ALTER TABLE External_message_attaches ADD CONSTRAINT External_message_attaches_fk0 FOREIGN KEY (file_id)
            REFERENCES Files(id);
            ALTER TABLE External_message_attaches ADD CONSTRAINT External_message_attaches_fk1 FOREIGN KEY (message_id)
            REFERENCES External_Messages(id);


            ALTER TABLE Available_sections ADD CONSTRAINT Available_sections_fk0 FOREIGN KEY (section_id) REFERENCES
            Sections(id);
            ALTER TABLE Available_sections ADD CONSTRAINT Available_sections_fk1 FOREIGN KEY (event_id) REFERENCES
            Events(id);

            ALTER TABLE Reports_Sections ADD CONSTRAINT Reports_Sections_fk0 FOREIGN KEY (report_id) REFERENCES
            Reports(id);
            ALTER TABLE Reports_Sections ADD CONSTRAINT Reports_Sections_fk1 FOREIGN KEY (section_id) REFERENCES
            Available_sections(id);

            ALTER TABLE Reports_Users ADD CONSTRAINT Reports_Users_fk0 FOREIGN KEY (report_id) REFERENCES Reports(id);
            ALTER TABLE Reports_Users ADD CONSTRAINT Reports_Users_fk1 FOREIGN KEY (user_id) REFERENCES Users(id);
            ALTER TABLE Reports_Users ADD CONSTRAINT Reports_Users_fk2 FOREIGN KEY (status) REFERENCES
            Reports_Statuses(id);

            ALTER TABLE User_Log ADD CONSTRAINT User_Log_fk0 FOREIGN KEY (user_id) REFERENCES Users(id);

            ALTER TABLE Reports_Future_Users ADD CONSTRAINT Reports_Future_Users_fk0 FOREIGN KEY (report_id) REFERENCES
            Reports(id);


        </sql>
    </changeSet>
    <changeSet id="201507190851" author="vmakarenko">
        <comment>
            Init 1
        </comment>
        <sql>
            alter table users add column user_type text;
        </sql>
    </changeSet>

    <changeSet id="201507190852" author="vmakarenko">
        <comment>
            ADd test user
        </comment>
        <sql>
            INSERT INTO USERS ( id, name, surname, passport_series,
            passport_number, password_hash, email, user_type) VALUES
            ('00000000-0000-0000-0000-000000000002', 'Администратор', 'Администратор', '0000', '000000',
            'admin', 'admin@test.ru', 'member');
        </sql>
    </changeSet>
    <changeSet id="201509200852" author="vmakarenko">
        <comment>
            ADd test user 2
        </comment>
        <sql>
            INSERT INTO USERS ( id, name, surname, passport_series,
            passport_number, password_hash, email, user_type) VALUES
            ('00000000-0000-0000-0000-000000000001', 'Пользователь', 'Пользователь', '0000', '000001',
            'test', 'test@test.ru', 'member');
        </sql>
    </changeSet>
</databaseChangeLog>